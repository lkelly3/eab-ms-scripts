#!/usr/bin/perl
#filter_grand_convergence_results.pl
use strict;
use warnings;
# A program to check lines from results files from the grand-convergence pipeline (https://github.com/dekoning-lab/grand-conv) to look for those with evidence of convergent sites
# Also filters residues to find those with a PP of at least 0.9000
# Takes as input a file that combines all "site-specific-posteriors.out" files generated by grand-convergence, with the header lines excluded
# You can create such an input file as follows: grep -v "SiteNumber" *_output_directory_names/site-specific-posteriors.out > All_probability_lines_from_site_specific_posteriors_files.txt
# The output is a list of convergent sites that pass the PP threshold, with the name of the dataset they come from appended to the start of the line
# Datasets with >1 convergent site passing the threshold will appear in the results file more than once; you can use this file to create a list of unique datasets with such sites 

# See comments below for further information on how this script works
# Usage: perl filter_grand_convergence_results.pl

#Declare and initialize variables
my $infile;
my $current_line;
my @current_line_parts= ();
my $current_pp_diverge;
my $current_pp_converge;

#Ask user for the path to the input file
print "Please enter the path to the results file you want to check:\n";
$infile = <STDIN>;
chomp $infile;

#Create output file for saving results in, or print an error if file cannot be made
open (OUTFILE, ">>Datasets_with_convergent_bases_min_PP_0.9000.txt") or die "Datasets_with_convergent_bases_min_PP_0.9000.txt\": $!\n";

#Open input file, or print an error if file cannot be opened
open (INFILE, "<$infile") or die "Could not open file \"$infile\": $!\n";

#Read in input file, one line at a time
while (<INFILE>) {
  	#save a copy of the current result line into a scalar
  	$current_line = $_;
 	#remove the newline character from the current line
 	chomp $_;
 	#split current line to separate out elements and add it to an array
 	@current_line_parts = split(/\t/, $_);
	#save the current value for the PP of divergence to a scalar
 	$current_pp_diverge = $current_line_parts[4];
 	#save the current value for the PP of convergence to a scalar
 	$current_pp_converge = $current_line_parts[5];
 	#check to see if the PP for convergence is higher than for divergence and if the PP of convergence is at least 0.9000
 	if (($current_pp_converge > $current_pp_diverge) and ($current_pp_converge >= 0.900)) {
 		#if so, save the name of the current dataset to the output file
 		print OUTFILE "$current_line_parts[0]\n";
	}  	 	
}
 	

#Close input file
close INFILE;

#Close output files
close OUTFILE;

#exit the program
exit;